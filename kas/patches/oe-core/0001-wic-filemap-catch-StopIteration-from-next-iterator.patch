From f35a5b754eb62cc89e56340070e3643aaeaeae39 Mon Sep 17 00:00:00 2001
From: Joerg Hofrichter <joerg.hofrichter@ni.com>
Date: Mon, 27 May 2024 13:27:51 +0200
Subject: [PATCH] wic/filemap: catch StopIteration from next(iterator)

This patch applies the following fix from bmaptool repo:

commit 2d3d0aeead0ac1b1f5e9fa5ef351aac8b14b5da9
Author: Simon McVittie <smcv@debian.org>
Date:   Mon Dec 10 15:23:47 2018 +0000

    Filemap: catch StopIteration from next(iterator)

    In Python >= 3.7, if code in a generator raises StopIteration, it is
    transformed into a RuntimeError instead of terminating the generator
    gracefully.

    Closes: https://github.com/intel/bmap-tools/issues/57
    Bug-Debian: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=915686

Signed-off-by: Joerg Hofrichter <joerg.hofrichter@ni.com>
---
 scripts/lib/wic/filemap.py | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/scripts/lib/wic/filemap.py b/scripts/lib/wic/filemap.py
index 4d9da28172..49b633cf30 100644
--- a/scripts/lib/wic/filemap.py
+++ b/scripts/lib/wic/filemap.py
@@ -454,7 +454,11 @@ class FilemapFiemap(_FilemapBase):
         self._log.debug("FilemapFiemap: get_mapped_ranges(%d,  %d(%d))"
                         % (start, count, start + count - 1))
         iterator = self._do_get_mapped_ranges(start, count)
-        first_prev, last_prev = next(iterator)
+
+        try:
+            first_prev, last_prev = next(iterator)
+        except StopIteration:
+            return
 
         for first, last in iterator:
             if last_prev == first - 1:
-- 
2.34.1

